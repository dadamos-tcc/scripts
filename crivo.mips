.data
quebra_de_linha: .asciiz "\n"
espaco:          .asciiz " "
lista:           .word   0

# $s0: limite
# $s1: lista
# $s2: i
# $s3: i * i
# $s4: j
# $s5: 1
.text
main:
    li   $v0, 5                    # $v0 é o serviço
    syscall                        # lê um inteiro em $v0
    move $s0, $v0                  # armazena o inteiro em $s0

# inicia lista
    li   $s5, 1
    la   $s1, lista                # posição inicial da lista
    li   $s2, 2                    # posição inicial i = 2
inicia_lista:
    blt  $s0, $s2, inicia_crivo    # limite < posição corrente (i <= limite)
    sw   $s5, 8($s1)               # lista[i] = 1; 8() é para começar em lista[2] 
    addi $s2, $s2, 1               # i++
    addi $s1, $s1, 4               # próxima posição da lista, cada word tem tamanho 4
    j    inicia_lista

# crivo de Eratóstenes
inicia_crivo:
    la   $s1, lista                # posição inicial da lista
    li   $s2, 2                    # posição inicial i = 2
crivo:
    mul  $s3, $s2, $s2             # i * i
    blt  $s0, $s3, inicia_imprime  # limite < quadrado da posição corrente (i * i <= limite)
    move $s4, $s3                  # j = i * i
    sll  $t0, $s2, 2               # posição corrente vezes o tamanho da word (i * 4)
    add  $s1, $s1, $t0             # próxima posição da lista (primeira posição será 8, lista[2])
    lw   $t0, 0($s1)               # lista[i]
    beq  $t0, $s5, marca_nao_primo # if (lista[i])
loop_crivo:
    la   $s1, lista                # vai para o início da lista
    addi $s2, $s2, 1               # i++
    j    crivo
marca_nao_primo:
    blt  $s0, $s4, loop_crivo      # limite < posição corrente (j <= limite)
    la   $s1, lista                # volta para o começo da lista
    sll  $t1, $s4, 2               # posição corrente vezes o tamanho da word (j * 4)
    add  $s1, $s1, $t1             # próxima posição da lista
    sw   $zero, 0($s1)             # lista[j] = 0
    add  $s4, $s4, $s2             # j += i
    j    marca_nao_primo

# imprime primos
inicia_imprime:
    la   $s1, lista                # posição inicial da lista
    li   $s2, 2                    # posição inicial i = 2
imprime_lista:
    blt  $s0, $s2, encerra         # limite < posição corrente (i <= limite)
    lw   $t0, 8($s1)               # 8() é para começar em lista[2] 
    beq  $t0, $s5, imprimir        # if (lista[i])
    j    loop_imprime
imprimir:
    move $a0, $s2                  # copia a posição corrente para $a0
    li   $v0, 1                    # $v0 é o serviço, 1 imprime inteiros
    syscall                        # imprime $a0
    la   $a0, espaco               # $a0 é a entrada do syscall
    li   $v0, 4                    # $v0 é o serviço, 4 imprime strings
    syscall                        # imprime $a0
loop_imprime:
    addi $s2, $s2, 1               # i++
    addi $s1, $s1, 4               # próxima posição da lista, cada word tem tamanho 4
    j    imprime_lista

encerra:
    la   $a0, quebra_de_linha
    li   $v0, 4                    # $v0 é o serviço, 4 imprime strings
    syscall                        # encerra o programa
    jr  $ra

# quebra a partir de 16383